{
    "functions": [
      {
        "label": "create_project",
        "id": "create_project",
        "taxonomyOperations": ["CreateProject"],
        "outputs": [
          { "Type": ["Project"], "Format": ["pyiron_atomistics.project.Project"] }
        ],
        "implementation": { "code": "python - << EOF\nfrom pyiron.project import Project\npr = Project('example_project')\n" }
      },
      {
        "label": "create_structure_pristinebulk",
        "id": "create_structure_pristinebulk",
        "taxonomyOperations": ["CreateStructurePristineBulk"],
        "inputs": [
          { "Type": ["Project"] },
          { "Type": ["Element"], "Format": ["String"] }
        ],
        "outputs": [
          { "Type": ["PristineBulk"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "structure = pr.create.structure.ase.bulk(Element, cubic=True)\n" }
      },
      {
        "label": "create_structure_genericbulk",
        "id": "create_structure_genericbulk",
        "taxonomyOperations": ["CreateStructureGenericBulk"],
        "inputs": [
          { "Type": ["Project"] },
          { "Type": ["Element"], "Format": ["String"] }
        ],
        "outputs": [
          { "Type": ["GenericBulk"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "structure = pr.create.structure.ase.bulk(Element, cubic=True)\ndel structure[[1]]\n" }
      },
      {
        "label": "create_structure_slab",
        "id": "create_structure_slab",
        "taxonomyOperations": ["CreateStructureSlab"],
        "inputs": [
          { "Type": ["Project"] },
          { "Type": ["Element"], "Format": ["String"] }
        ],
        "outputs": [
          { "Type": ["Slab"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "structure = pr.create_surface(Element, surface_type='fcc111', size=(3, 4, 4), vacuum=10, orthogonal=True)\n" }
      },
      {
        "label": "create_vacancy",
        "id": "create_vacancy",
        "taxonomyOperations": ["CreateVacancy"],
        "inputs": [
          { "Type": ["Structure"] }
        ],
        "outputs": [
          { "Type": ["VacancyStructure"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "# Create Vacancy Structure\nvacancy_structure = structure.copy()\ndel vacancy_structure[1]\n" }
      },
      {
        "label": "relax_structure",
        "id": "relax_structure",
        "taxonomyOperations": ["RelaxStructure"],
        "inputs": [
          { "Type": ["Slab", "PristineBulk", "GenericBulk"] }
        ],
        "outputs": [
          { "Type": ["RelaxedStructure"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "# Relax Structure\nrelax_job = pr.create_job(job_type=pr.job_type.Lammps, job_name='lammps_relax')\nrelax_job.structure = vacancy_structure\nrelax_job.potential = relax_job.list_potentials()[0]\nrelax_job.calc_minimize(pressure=0.0)\nrelax_job.run()\nrelax_structure = relax_job.get_final_structure()\n" }
      },
      {
        "label": "relax_vacancy_structure",
        "id": "relax_vacancy_structure",
        "taxonomyOperations": ["RelaxVacancyStructure"],
        "inputs": [
          { "Type": ["VacancyStructure"] }
        ],
        "outputs": [
          { "Type": ["RelaxedVacancyStructure"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "# Relax Structure\nrelax_job = pr.create_job(job_type=pr.job_type.Lammps, job_name='lammps_relax')\nrelax_job.structure = vacancy_structure\nrelax_job.potential = relax_job.list_potentials()[0]\nrelax_job.calc_minimize(pressure=0.0)\nrelax_job.run()\nrelax_structure = relax_job.get_final_structure()\n" }
      },
      {
        "label": "calculate_vacancy_formation_energy",
        "id": "calculate_vacancy_formation_energy",
        "taxonomyOperations": ["CalculateVacancyFormationEnergy"],
        "inputs": [
          { "Type": ["RelaxedVacancyStructure"] },
          { "Type": ["PristineBulk"] }
        ],
        "outputs": [
          { "Type": ["VacancyFormationEnergy"], "Format": ["Float"] }
        ],
        "implementation": { "code": "# Calculate Vacancy Formation Energy\nbulk_job = pr.create_job(job_type=pr.job_type.Lammps, job_name='lammps_bulk', delete_existing_job=True)\nbulk_job.structure = structure\nbulk_job.potential = bulk_job.list_potentials()[0]\nbulk_job.run()\nE_v = relax_job.output.energy_pot[-1]\nE_b = bulk_job.output.energy_pot[-1]\nE_vf = E_v - (3/4 * E_b)\nprint(E_vf)\nEOF\n" }
      }
    ]
 }
